{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Mistral dashboard to display metrics from Prometheus",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2683,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 22,
      "panels": [],
      "title": "Overview",
      "type": "row"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Mistral cluster status (Up, Degraded, Down)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "1": {
                  "text": "Degraded"
                },
                "2": {
                  "text": "Down"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 1
      },
      "id": 61,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_cluster{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"mistral_cluster\" WHERE (\"namespace\" ='$project' ) AND time >= now() - 2m",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Mistral Cluster Status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays number of completed workflows, tasks and actions per second",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 10,
        "x": 4,
        "y": 1
      },
      "id": 6,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "tasks",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, delta(mistral_workflow_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\",state=\"SUCCESS\"}[$inter])))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Workflow",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT difference(last(\"tasks_success\")) FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(null)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "tasks_success"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [],
                "type": "difference"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant/"
            }
          ]
        },
        {
          "alias": "workflows",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, delta(mistral_task_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\",state=\"SUCCESS\"}[$inter])))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Task",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT difference(last(\"workflows_success\")) FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(null)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "workflows_success"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [],
                "type": "difference"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        },
        {
          "alias": "actions",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, delta(mistral_action_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\",state=\"SUCCESS\"}[$inter])))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Action",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT difference(last(\"actions_success\")) FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(null)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "actions_success"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [],
                "type": "difference"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        }
      ],
      "title": "Completion speed per sec",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays amount of memory requested by Mistral pods, memory usage and limit",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/limit*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/request*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 10,
        "x": 14,
        "y": 1
      },
      "id": 42,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral.+\"}) by (container)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Max {{container}}",
          "measurement": "memory/usage",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/usage\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/"
            }
          ]
        },
        {
          "alias": "limit: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "avg(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral.+\"}) by (container)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Avg {{container}}",
          "measurement": "memory/limit",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/limit\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/"
            }
          ]
        },
        {
          "alias": "request: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "min(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral.+\"}) by (container)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Min {{container}}",
          "measurement": "memory/request",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/request\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/"
            }
          ]
        }
      ],
      "title": "MEM Usage Summary",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Version of using opensource Mistral",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "1": {
                  "text": "Degraded"
                },
                "2": {
                  "text": "Down"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 4
      },
      "id": 73,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^version$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "mistral_version{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}",
          "format": "table",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"mistral_cluster\" WHERE (\"namespace\" ='$project' ) AND time >= now() - 2m",
          "range": false,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Mistral Opensource version",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays Mistral Maintenance mode status",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Running"
                },
                "1": {
                  "text": "Pausing"
                },
                "2": {
                  "text": "Paused"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "#eab839",
                "value": 1
              },
              {
                "color": "#1f78c1",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 6
      },
      "id": 4,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_maintenance_status{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}))",
          "format": "time_series",
          "groupBy": [],
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_maintenance",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"status\") FROM \"mistral_maintenance\" WHERE (\"namespace\" ='$project' ) AND time >= now() - 2m",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "state"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Maintenance status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays number of tasks in non-terminal state",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "RUNNING"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#64b0c8",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "WAITING"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#e5ac0e",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 10,
        "x": 4,
        "y": 6
      },
      "id": 53,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "Tasks in non-terminal state",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_task_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\",state=~\"RUNNING|WAITING\"}) by (state)) by (state)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "tenant"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{state}}",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"tasks_running\") + mean(\"tasks_waiting\") FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "task_running"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ],
            [
              {
                "params": [
                  "tasks_waiting"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "sum"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        }
      ],
      "title": "Tasks in non-terminal state",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays amount of cores requested by Mistral pods, cores usage and limit",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/request:*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/limit*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 10,
        "x": 14,
        "y": 6
      },
      "id": 41,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(rate(container_cpu_user_seconds_total{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral.+\"}[$inter])) by (container)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Max {{ container}}",
          "measurement": "cpu/usage_rate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/usage_rate\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/"
            }
          ]
        },
        {
          "alias": "limit: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "avg(rate(container_cpu_user_seconds_total{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral.+\"}[$inter])) by (container)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Avg {{ container}}",
          "measurement": "cpu/limit",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/limit\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/"
            }
          ]
        },
        {
          "alias": "request: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "min(rate(container_cpu_user_seconds_total{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral.+\"}[$inter])) by (container)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Min {{ container}}",
          "measurement": "cpu/request",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/request\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project' AND \"pod_name\" =~ /^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^(mistral-api|mistral-executor|mistral-engine|mistral-event-engine|mistral-notifier|mistral-monitoring|monitoring-agent)/"
            }
          ]
        }
      ],
      "title": "CPU Usage Summary",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays Mistral E2E smoke test status",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Not Enabled"
                },
                "1": {
                  "text": "Passed"
                },
                "2": {
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#967302",
                "value": null
              },
              {
                "color": "#508642",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 0,
        "y": 9
      },
      "id": 32,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_smoke_status{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}))",
          "format": "time_series",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"smoke\") FROM \"mistral_maintenance\" WHERE (\"namespace\" ='$project') AND time >= now() - 2m",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "smoke"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        }
      ],
      "title": "Mistral E2E Smoke",
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 68,
      "panels": [],
      "title": "Mistral Apps Status",
      "type": "row"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Mistral API status (Up, Degraded, Down)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "1": {
                  "text": "Degraded"
                },
                "2": {
                  "text": "Down"
                },
                "": {
                  "text": ""
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 0,
        "y": 12
      },
      "id": 64,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "max(topk(1, mistral_state{namespace=\"$mistral_namespace\", cluster=\"$cluster\",name='mistral-api'}))",
          "format": "time_series",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"mistral_apps\" WHERE (\"namespace\" ='$project'  AND \"name\" =~ /^mistral-api/) AND time >= now() - 2m ",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "state"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-api/"
            }
          ]
        }
      ],
      "title": "Mistral API Status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Mistral executor status (Up, Degraded, Down)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "1": {
                  "text": "Degraded"
                },
                "2": {
                  "text": "Down"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 5,
        "y": 12
      },
      "id": 66,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_state{namespace=\"$mistral_namespace\", cluster=\"$cluster\",name='mistral-executor'}))",
          "format": "time_series",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"mistral_apps\" WHERE (\"namespace\" ='$project'  AND \"name\" =~ /^mistral-executor/) AND time >= now() - 2m ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "state"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-executor/"
            }
          ]
        }
      ],
      "title": "Mistral Executor Status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Mistral engine status (Up, Degraded, Down)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "1": {
                  "text": "Degraded"
                },
                "2": {
                  "text": "Down"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 10,
        "y": 12
      },
      "id": 62,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_state{namespace=\"$mistral_namespace\", cluster=\"$cluster\",name='mistral-engine'}))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"mistral_apps\" WHERE (\"namespace\" ='$project'  AND \"name\" =~ /^mistral-engine/) AND time >= now() - 2m ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Mistral Engine Status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Mistral notifier status (Up, Degraded, Down)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "1": {
                  "text": "Degraded"
                },
                "2": {
                  "text": "Down"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 14,
        "y": 12
      },
      "id": 65,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_state{namespace=\"$mistral_namespace\", cluster=\"$cluster\",name='mistral-notifier'}))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"mistral_apps\" WHERE (\"namespace\" ='$project'  AND \"name\" =~ /^mistral-notifier/) AND time >= now() - 2m ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Mistral Notifier Status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Mistral monitoring status (Up, Degraded, Down)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "1": {
                  "text": "Degraded"
                },
                "2": {
                  "text": "Down"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#890f02",
                "value": 2
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 19,
        "y": 12
      },
      "id": 69,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_state{namespace=\"$mistral_namespace\", cluster=\"$cluster\",name='mistral-monitoring'}))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"mistral_apps\" WHERE (\"namespace\" ='$project'  AND \"name\" =~ /^mistral-monitoring/) AND time >= now() - 2m ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Mistral Monitoring Status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays current number of available Mistral API pods.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#890f02",
                "value": null
              },
              {
                "color": "#3f6833",
                "value": 1
              },
              {
                "color": "#d44a3a"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 0,
        "y": 15
      },
      "id": 20,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "max(topk(1, mistral_available_replicas{namespace=\"$mistral_namespace\", cluster=\"$cluster\",name=\"mistral-api\"}))",
          "format": "time_series",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-api/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-api/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Mistral API pods",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays current number of available Mistral Executor pods.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#890f02",
                "value": null
              },
              {
                "color": "#3f6833",
                "value": 1
              },
              {
                "color": "#d44a3a"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 5,
        "y": 15
      },
      "id": 18,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "max(topk(1, mistral_available_replicas{namespace=\"$mistral_namespace\", cluster=\"$cluster\", name=\"mistral-executor\"}))",
          "format": "time_series",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-executor/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-executor/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Mistral Executor pods",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays current number of available Mistral Engine pods.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#890f02",
                "value": null
              },
              {
                "color": "#3f6833",
                "value": 1
              },
              {
                "color": "#d44a3a"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 10,
        "y": 15
      },
      "id": 19,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_available_replicas{namespace=\"$mistral_namespace\", cluster=\"$cluster\", name=\"mistral-engine\"}))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-engine/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-engine/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Mistral Engine pods",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays current number of available Mistral Notifier pods.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#890f02",
                "value": null
              },
              {
                "color": "#3f6833",
                "value": 1
              },
              {
                "color": "#d44a3a"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 14,
        "y": 15
      },
      "id": 17,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_available_replicas{namespace=\"$mistral_namespace\", cluster=\"$cluster\", name=\"mistral-notifier\"}))",
          "format": "time_series",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-notifier/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-notifier/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Mistral Notifier pods",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays current number of available Mistral Monitoring pods.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#890f02",
                "value": null
              },
              {
                "color": "#3f6833",
                "value": 1
              },
              {
                "color": "#d44a3a"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 19,
        "y": 15
      },
      "id": 16,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_available_replicas{namespace=\"$mistral_namespace\", cluster=\"$cluster\", name=\"mistral-monitoring\"}))",
          "format": "time_series",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-monitoring/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-monitoring/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Mistral Monitoring pods",
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Сount of container restarts in each Mistral pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Count",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 18
      },
      "id": 86,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "width": 400
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum by (pod, name) (\r\n    kube_pod_container_status_restarts_total{\r\n      namespace=\"$mistral_namespace\", \r\n      container!=\"POD\"\r\n    }\r\n)",
          "format": "time_series",
          "groupBy": [],
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-api/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-api/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Mistral pods restart count",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Counts how many pods last terminated for each distinct reason (e.g., OOMKilled, Error, etc.). ",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 11,
        "y": 18
      },
      "id": 87,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "count by (pod, reason) (\r\n  kube_pod_container_status_last_terminated_reason{\r\n    namespace=\"mistral-saar\"\r\n  }\r\n) > 0\r\n",
          "format": "table",
          "groupBy": [],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{exported_pod}}",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-api/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-api/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ]
        }
      ],
      "title": "Mistral pod restarts by reason",
      "transformations": [
        {
          "id": "limit",
          "options": {
            "limitField": "50"
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 12,
      "panels": [],
      "title": "Total Mistral Entities",
      "type": "row"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays workflows count by state",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cancelled"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#c15c17",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#890f02",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "running"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#0a50a1",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "success"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#3f6833",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 0,
        "y": 27
      },
      "id": 8,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "running",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "sum(topk(1, mistral_workflow_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (state))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Sum",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"workflows_running\") FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "workflows_running"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        },
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_workflow_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (state)) by (state)",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{state}}",
          "refId": "A"
        }
      ],
      "title": "Workflow count by state",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays tasks count by state",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cancelled"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#c15c17",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "delayed"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#967302",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#890f02",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "running"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#0a50a1",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "success"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#3f6833",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 6,
        "y": 27
      },
      "id": 2,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "running",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "sum(topk(1, mistral_task_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (state))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Sum",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"tasks_running\") FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "tasks_running"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        },
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_task_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (state)) by (state)",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{state}}",
          "refId": "B"
        }
      ],
      "title": "Task count by state",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays delayed calls count by target",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 12,
        "y": 27
      },
      "id": 55,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "complete_task",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "sum(topk(1, mistral_delayed_calls_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (target))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Sum",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"delayed_calls_mistral.engine.policies._complete_task\") FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "delayed_calls_mistral.engine.policies._complete_task"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        },
        {
          "alias": "resume_executions",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_delayed_calls_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (target)) by (target)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{target}}",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"delayed_calls_mistral.services.maintenance._resume_executions\") FROM \"mistral_entities\" WHERE (\"namespace\"='$project') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "H",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "delayed_calls_mistral.services.maintenance._resume_executions"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        }
      ],
      "title": "Delayed calls count by target",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays actions count by state",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cancelled"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#c15c17",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "error"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#890f02",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "running"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#0a50a1",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "success"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#3f6833",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 18,
        "y": 27
      },
      "id": 10,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "running",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "sum(topk(1, mistral_action_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (state))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Sum",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"actions_running\") FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "actions_running"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        },
        {
          "alias": "success",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, mistral_action_count{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}) by (state)) by (state)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{state}}",
          "measurement": "mistral_entities",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"actions_success\") FROM \"mistral_entities\" WHERE (\"namespace\" ='$project') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "E",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "actions_success"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "tenant",
              "operator": "=~",
              "value": "/^$tenant$/"
            }
          ]
        }
      ],
      "title": "Action count by state",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays the 50 most recent workflow executions based on their creation time.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "mistral_execution_created_timestamp"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 188
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 0,
        "y": 33
      },
      "id": 88,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "mistral_execution_created_timestamp"
          }
        ]
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "max by (workflow_name, execution_id, state) (mistral_execution_time)",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "max by (workflow_name, execution_id) (mistral_execution_created_timestamp * 1000)",
          "format": "table",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Mistral Latest 50 Execution Workflow Time",
      "transformations": [
        {
          "id": "joinByField",
          "options": {
            "byField": "execution_id",
            "mode": "outer"
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "time",
                "targetField": "Value #B"
              }
            ],
            "fields": {}
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time 2": true,
              "workflow_name 2": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "Time 1": "Time",
              "Value #A": "seconds",
              "Value #B": "created_at",
              "state": "",
              "workflow_name 1": "workflow_name"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Total number of task retries",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-green",
                "value": null
              },
              {
                "color": "semi-dark-green",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 13,
        "y": 33
      },
      "id": 80,
      "interval": "$inter",
      "maxDataPoints": 100,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": " mistral_task_retries{namespace=\"$mistral_namespace\"}",
          "format": "table",
          "fullMetaSearch": false,
          "groupBy": [],
          "includeNullMetadata": true,
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "__auto",
          "measurement": "mistral_apps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"available_replicas\") FROM \"mistral_apps\" WHERE (\"name\" =~ /^mistral-api/ AND \"namespace\" ='$project' ) AND time >= now() - 2m",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "available_replicas"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^mistral-api/"
            },
            {
              "condition": "AND",
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            }
          ],
          "useBackend": false
        }
      ],
      "title": "Mistral task retries",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": false,
              "__name__": true,
              "container": true,
              "endpoint": true,
              "exported_namespace": true,
              "instance": true,
              "job": true,
              "namespace": true,
              "pod": true,
              "service": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 41
      },
      "id": 24,
      "panels": [],
      "title": "Mistral CPU Usage",
      "type": "row"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays Mistral Engine CPU usage (in cores),  CPU limit and CPU requested for each engine pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 10
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 42
      },
      "id": 26,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"$mistral_namespace\", cluster=\"$cluster\",pod=~\"mistral-engine.+\"}[$inter])) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "usage: {{pod}}",
          "measurement": "cpu/usage_rate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/usage_rate\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project' AND \"pod_name\" =~ /^mistral-engine/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-engine/"
            }
          ]
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod) (\r\n  kube_pod_container_resource_limits_cpu_cores{\r\n    namespace=\"$mistral_namespace\",\r\n    container=\"mistral-engine\"\r\n  } \r\n)\r\n",
          "hide": false,
          "instant": false,
          "legendFormat": "limit: {{pod}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Mistral Engine CPU Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays Mistral API CPU usage (in cores),  CPU limit and CPU requested for each API pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 10
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 12,
        "y": 42
      },
      "id": 56,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"$mistral_namespace\", cluster=\"$cluster\",pod=~\"mistral-api.+\"}[$inter])) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "cpu/usage_rate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/usage_rate\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\"='$project'  AND \"pod_name\" =~ /^mistral-api/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-api/"
            }
          ]
        },
        {
          "alias": "limit: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod) (\r\n  kube_pod_container_resource_limits_cpu_cores{\r\n    namespace=\"$mistral_namespace\",\r\n    container=\"mistral-api\"\r\n  } \r\n)\r\n",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "legendFormat": "limit: {{pod}}",
          "measurement": "cpu/limit",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/limit\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-api/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-api/"
            }
          ]
        },
        {
          "alias": "request: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "measurement": "cpu/request",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/request\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\"='$project'  AND \"pod_name\" =~ /^mistral-api/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-api/"
            }
          ]
        }
      ],
      "title": "Mistral API CPU Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays Mistral Executor CPU usage (in cores),  CPU limit and CPU requested for each Executor pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 10
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 48
      },
      "id": 57,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"$mistral_namespace\", cluster=\"$cluster\",pod=~\"mistral-executor.+\"}[$inter])) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "cpu/usage_rate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/usage_rate\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-executor/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-executor/"
            }
          ]
        },
        {
          "alias": "limit: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod) (\r\n  kube_pod_container_resource_limits_cpu_cores{\r\n    namespace=\"$mistral_namespace\",\r\n    container=\"mistral-executor\"\r\n  } \r\n)\r\n",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "legendFormat": "limit: {{pod}}",
          "measurement": "cpu/limit",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/limit\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-executor/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-executor/"
            }
          ]
        },
        {
          "alias": "request: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "measurement": "cpu/request",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/request\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-executor/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-executor/"
            }
          ]
        }
      ],
      "title": "Mistral Executor CPU Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays Mistral Notifier CPU usage (in cores),  CPU limit and CPU requested for each Notifier pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 10
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 8,
        "y": 48
      },
      "id": 58,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"$mistral_namespace\", cluster=\"$cluster\",pod=~\"mistral-notifier.+\"}[$inter])) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "cpu/usage_rate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/usage_rate\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-notifier/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-notifier/"
            }
          ]
        },
        {
          "alias": "limit: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod) (\r\n  kube_pod_container_resource_limits_cpu_cores{\r\n    namespace=\"$mistral_namespace\",\r\n    container=\"mistral-notifier\"\r\n  } \r\n)\r\n",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "legendFormat": "limit: {{pod}}",
          "measurement": "cpu/limit",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/limit\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-notifier/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-notifier/"
            }
          ]
        },
        {
          "alias": "request: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "measurement": "cpu/request",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/request\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\"='$project'  AND \"pod_name\" =~ /^mistral-notifier/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-notifier/"
            }
          ]
        }
      ],
      "title": "Mistral Notifier CPU Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays Mistral Monitoring CPU usage (in cores),  CPU limit and CPU requested for each Monitoring pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Cores",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 10
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 48
      },
      "id": 59,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"$mistral_namespace\", cluster=\"$cluster\",pod=~\"mistral-monitoring.+\"}[$inter])) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "cpu/usage_rate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/usage_rate\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-monitoring/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-monitoring/"
            }
          ]
        },
        {
          "alias": "limit: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod) (\r\n  kube_pod_container_resource_limits_cpu_cores{\r\n    namespace=\"$mistral_namespace\",\r\n    container=\"mistral-monitoring\"\r\n  }\r\n)\r\n",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "legendFormat": "limit: {{pod}}",
          "measurement": "cpu/limit",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/limit\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\"='$project'  AND \"pod_name\" =~ /^mistral-monitoring/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "range": true,
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-monitoring/"
            }
          ]
        },
        {
          "alias": "request: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "intervalFactor": 1,
          "measurement": "cpu/request",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"cpu/request\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-monitoring/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(linear)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-monitoring/"
            }
          ]
        }
      ],
      "title": "Mistral Monitoring CPU Usage",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 54
      },
      "id": 34,
      "panels": [],
      "title": "Mistral MEM Usage",
      "type": "row"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays Mistral Engine memory usage (in MiB),  memory limit and memory requested for each Engine pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/limit*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red"
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/request*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*/"
            },
            "properties": []
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 55
      },
      "id": 35,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral-engine\"}) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "memory/usage",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/usage\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-engine/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-engine/"
            }
          ]
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod)(\r\n  kube_pod_container_resource_limits{namespace=\"$mistral_namespace\", resource=\"memory\",container=~\"mistral-engine\"}\r\n)\r\n",
          "hide": false,
          "instant": false,
          "legendFormat": "limit: {{pod}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Mistral Engine MEM Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays Mistral Executor memory usage (in MiB),  memory limit and memory requested for each Executor pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/limit*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red"
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/request*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 12,
        "y": 55
      },
      "id": 36,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral-executor\"}) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "memory/usage",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/usage\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-executor/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-executor/"
            }
          ]
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod)(\r\n  kube_pod_container_resource_limits{namespace=\"$mistral_namespace\", resource=\"memory\",container=~\"mistral-executor\"}\r\n)\r\n",
          "hide": false,
          "instant": false,
          "legendFormat": "limit: {{pod}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Mistral Executor MEM Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays Mistral API memory usage (in MiB),  memory limit and memory requested for each API pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/limit*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red"
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/request*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 61
      },
      "id": 37,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "sum(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral-api\"}) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "memory/usage",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/usage\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-api/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-api/"
            }
          ]
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod)(\r\n  kube_pod_container_resource_limits{namespace=\"$mistral_namespace\", resource=\"memory\",container=~\"mistral-engine\"}\r\n)\r\n",
          "hide": false,
          "instant": false,
          "legendFormat": "limit: {{pod}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Mistral API MEM Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays Mistral Notifier memory usage (in MiB),  memory limit and memory requested for each Notifier pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/limit*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red"
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/request*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 8,
        "y": 61
      },
      "id": 38,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral-notifier\"}) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "memory/usage",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/usage\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\"='$project'  AND \"pod_name\" =~ /^mistral-notifier/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-notifier/"
            }
          ]
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod)(\r\n  kube_pod_container_resource_limits{namespace=\"$mistral_namespace\", resource=\"memory\",container=~\"mistral-notifier\"}\r\n)\r\n",
          "hide": false,
          "instant": false,
          "legendFormat": "limit: {{pod}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Mistral Notifier MEM Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "prometheus",
        "uid": "$datasource"
      },
      "description": "Displays Mistral Monitoring memory usage (in MiB),  memory limit and memory requested for each Monitoring pod",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/limit*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red"
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/request*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 61
      },
      "id": 39,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "usage: $tag_pod_name",
          "datasource": {
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum(container_memory_usage_bytes{container!=\"POD\",image!=\"\",namespace=\"$mistral_namespace\", cluster=\"$cluster\",container=~\"mistral-monitoring\"}) by (pod)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "pod_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{pod}}",
          "measurement": "memory/usage",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"value\") FROM \"memory/usage\" WHERE (\"type\" = 'pod_container' AND \"namespace_name\" ='$project'  AND \"pod_name\" =~ /^mistral-monitoring/) AND $timeFilter GROUP BY time($__interval), \"pod_name\" fill(none)",
          "range": true,
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type",
              "operator": "=",
              "value": "pod_container"
            },
            {
              "condition": "AND",
              "key": "namespace_name",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "pod_name",
              "operator": "=~",
              "value": "/^mistral-monitoring/"
            }
          ]
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "$datasource"
          },
          "editorMode": "code",
          "expr": "sum by (pod)(\r\n  kube_pod_container_resource_limits{namespace=\"$mistral_namespace\", resource=\"memory\",container=~\"mistral-monitoring\"}\r\n)\r\n",
          "hide": false,
          "instant": false,
          "legendFormat": "limit: {{pod}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Mistral Monitoring MEM Usage",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 67
      },
      "id": 44,
      "panels": [],
      "title": "RabbitMQ",
      "type": "row"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "RabbitMQ status (Up, Down)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Up"
                },
                "2": {
                  "text": "Down"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#3f6833"
              },
              {
                "color": "#890f02",
                "value": 1
              },
              {
                "color": "#890f02"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 0,
        "y": 68
      },
      "id": 70,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.1",
      "targets": [
        {
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, rabbitmq_status{namespace=\"$mistral_namespace\", cluster=\"$cluster\"}))",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"state\") FROM \"rabbitmq_status\" WHERE (\"namespace\" ='$project') AND time >= now() - 2m ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "RabbitMQ Status",
      "type": "stat"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays number of messages in Mistral engine queue",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 6,
        "y": 68
      },
      "id": 48,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "Messages count",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, rabbitmq_queues{namespace=\"$mistral_namespace\", cluster=\"$cluster\",queue=\"_mistral_engine\"})) by (queue)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{queue}}",
          "measurement": "rabbitmq_queues",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"messages_count\") FROM \"rabbitmq_queues\" WHERE (\"namespace\" ='$project' AND \"name\" = '_mistral_engine') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "messages_count"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "name",
              "operator": "=",
              "value": "_mistral_engine"
            }
          ]
        }
      ],
      "title": "Mistral Engine Messages Count",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays number of messages in Mistral executor queue",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 12,
        "y": 68
      },
      "id": 72,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "Messages count",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, rabbitmq_queues{namespace=\"$mistral_namespace\", cluster=\"$cluster\",queue=\"_mistral_executor\"})) by (queue)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{queue}}",
          "measurement": "rabbitmq_queues",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"messages_count\") FROM \"rabbitmq_queues\" WHERE (\"namespace\" ='$project' AND \"name\" = '_mistral_executor') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "messages_count"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "name",
              "operator": "=",
              "value": "_mistral_executor"
            }
          ]
        }
      ],
      "title": "Mistral Executor Messages Count",
      "type": "timeseries"
    },
    {
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Displays number of messages in Mistral notifier queue",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 18,
        "y": 68
      },
      "id": 71,
      "interval": "$inter",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "Messages count",
          "datasource": {
            "uid": "$datasource"
          },
          "expr": "max(topk(1, rabbitmq_queues{namespace=\"$mistral_namespace\", cluster=\"$cluster\",queue=\"_mistral_notifier\"})) by (queue)",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "{{queue}}",
          "measurement": "rabbitmq_queues",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"messages_count\") FROM \"rabbitmq_queues\" WHERE (\"namespace\" ='$project' AND \"name\" = '_mistral_notifier') AND $timeFilter GROUP BY time($__interval) fill(none)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "messages_count"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "namespace",
              "operator": "=~",
              "value": "/^$project$/"
            },
            {
              "condition": "AND",
              "key": "name",
              "operator": "=",
              "value": "_mistral_notifier"
            }
          ]
        }
      ],
      "title": "Mistral Notifier Messages Count",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [
    "mistral"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Platform Monitoring Prometheus",
          "value": "PC3E95692D54ABCC0"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Datasource",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "auto": true,
        "auto_count": 50,
        "auto_min": "1m",
        "current": {
          "selected": false,
          "text": "auto",
          "value": "$__auto_interval_inter"
        },
        "hide": 0,
        "label": "Sampling",
        "name": "inter",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": "$__auto_interval_inter"
          },
          {
            "selected": false,
            "text": "2m",
            "value": "2m"
          },
          {
            "selected": false,
            "text": "3m",
            "value": "3m"
          },
          {
            "selected": false,
            "text": "4m",
            "value": "4m"
          },
          {
            "selected": false,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          }
        ],
        "query": "2m,3m,4m,5m,10m",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      },
      {
        "current": {
          "selected": false,
          "text": "mistral-saar",
          "value": "mistral-saar"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "label_values(mistral_cluster, namespace)",
        "hide": 0,
        "includeAll": false,
        "label": "Project",
        "multi": false,
        "name": "mistral_namespace",
        "options": [],
        "query": "label_values(mistral_cluster, namespace)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "label_values(mistral_cluster, cluster)",
        "hide": 0,
        "includeAll": false,
        "label": "Cluster",
        "multi": false,
        "name": "cluster",
        "options": [],
        "query": {
          "query": "label_values(mistral_cluster, cluster)",
          "refId": "StandardVariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "browser",
  "title": "Mistral Overview",
  "version": 2,
  "weekStart": ""
}